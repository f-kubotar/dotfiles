methods=Kernel/i.DelegateClass.delegate
sublibraries=
requires=
classes=Delegator,SimpleDelegator
is_sublibrary=false

メソッドの委譲 (delegation) を行う。

[[c:Delegator]] クラスは指定したオブジェクトにメソッドの実行を委譲する。
[[c:Delegator]] クラスを利用する場合はこれを継承して
[[m:Delegator#__getobj__]] メソッドを再定義して委譲先のオブジェクトを指定する。

[[c:SimpleDelegator]] は [[c:Delegator]] の利用例の一つであり、コンストラクタに
渡されたオブジェクトにメソッドの実行を委譲する。

関数 DelegateClass(supperclass) は superclass クラスの
オブジェクトをひとつとり、そのオブジェクトにインスタンスメソッドを委譲す
るクラスを定義して返す。

see also: [[m:Object#method_missing]]

//emlist{
require 'delegate'

foo = Object.new
def foo.test
  p 25
end
foo2 = SimpleDelegator.new(foo)
foo2.test   # => 25

class ExtArray < DelegateClass(Array)
  def initialize
    super([])
  end
end
a = ExtArray.new
p a.class   # => ExtArray
a.push 25
p a         # => [25]
//}

=== 参考

  * Rubyist Magazine[[url:http://jp.rubyist.net/magazine/]]
  * 標準添付ライブラリ紹介【第 6 回】委譲[[url:http://jp.rubyist.net/magazine/?0012-BundledLibraries]]
