visibility=public
kind=defined
names=exec

--- exec(command) -> ()
--- exec(program, *arg) -> ()

command で指定されたコマンドを実行します。プロセスの実行コー
ドはそのコマンド(あるいは shell)になるので、起動に成功した場
合、このメソッドからは戻りません。

一番目の形式では command が shell のメタ文字
(* ? {} [] <> () ~ & | \ $ ; ' ` " \n)を含む場合、
shell 経由で実行されます。そうでなければインタプリタから直接
実行されます。

二番目の形式では、常に shell を経由せずに実行されます。
この場合には空白や shell のメタキャラクタもそのまま
program の引数に渡されます。
先頭の引数が2要素の配列であった場合、第1要素の文字列が実際に
起動するプログラムのパスであり、第2要素が「みせかけ」のプロ
グラム名になります。
このとき、第1要素をフルパスで指定しなくても
環境変数 PATH から探します。

コマンドの引数がない場合も含めて shell を経由せずにプログラムを実行させたい場合、
以下のように exec を呼び出します。

  exec [program, program], *args

@param command コマンドを文字列で指定します。
@param program 文字列か2要素の配列です。
@param arg 渡される引数です。
@raise Errno::EXXX 起動に失敗し、ruby インタプリタに制御が戻った場合に発生します。


@see [[m:Kernel.#system]],[[m:Kernel.#`]],[[m:Kernel.#fork]],[[m:IO.popen]],[[m:IO.pipe]],[[m:Kernel.#open]]

