visibility=public
kind=defined
names====

--- ===(other) -> bool

other が self に所属していれば真を返します。case-when 文で使用します。

このメソッドは各クラスの性質に合わせて再定義すべきです。
other が self に所属しているかどうかの判定をするように再定義されることが期待
されています。

デフォルトではメソッド == の別名で、同値性の判定になっています。

このメソッドは [[unknown:制御構造/case]] 文での比較に用いられます。
when節の式をレシーバーとして === を呼び出すことに注意してください。

@param other 比較するオブジェクトです。

  age = 12
  result = 
    case age
  when 0 .. 2 #数値の範囲に`所属'するか調べる
    "baby"
  when 3 .. 6
    "little child"
  when 7 .. 12
    "child"
  when 13 .. 18
    "youth"
  else
    "adult"
  end
  
  puts result #=> "child"
  
  def check arg
    case arg
    when /ruby(?!\s*on\s*rails)/i # 正規表現で表現される文字列の範囲に`所属'するか調べる
      "hit! #{arg}"
    when String # クラスに`所属'するか調べる
      "Instance of String class.But don't hit."
    else
      "unknown"
    end
  end
  
  puts check([]) #=> unknown
  puts check("mash-up in Ruby on Rails") #=> instance of String class.but not hit...
  puts check("<Ruby's world>") #=> hit! <Ruby's world>

@see [[m:Object#==]]

